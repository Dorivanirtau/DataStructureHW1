import src.avl_template_new
from src.avl_template_new import AVLTreeList
from src.avl_template_new import AVLNode


def test_BF_after_deletion_alternatly():
    T = AVLTreeList()
    for i in range(99):
        T.insert(0, i)

    for i in range(50):
        if i % 5 == 0:
            T.delete(0)
        elif i % 5 == 1:
            T.delete(T.length() - 1)
        elif i % 5 == 2:
            T.delete((T.length() - 1) // 2)
        elif i % 5 == 3:
            T.delete((T.length() - 1) // 3)
        else:
            T.delete((T.length() - 1) // 7)
        # if abs(T.getRoot().getLeft().getHeight() - T.getRoot().getRight().getHeight()) >= 2:
        #     # T.printt()
        #     print(iter_num)
        # iter_num += 1
        # self.in_order(T, T.getRoot(), self.check_BF)
    print(T.listToArray())
    T.printt()



test_BF_after_deletion_alternatly()